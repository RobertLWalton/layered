parser print bracket "":
    block TOP LEVEL: bracket "(" ... ")" [parser]
    block TOP LEVEL: bracket "[" ... "]" [parser]
    block TOP LEVEL: indentation mark [: "TOP" "LEVEL" :] ... ";" [ ]
ERROR: in line 13: too few quoted names in:
parser define bracket "[+"
^^^^^^^^^^^^^^^^^^^^^^^^^^
ERROR: in line 14: expected quoted name after:
parser define bracket "[+" ...
                           ^^^
parser print context "default":
    block standard: default [code]
    block TOP LEVEL: default [ ]
parser define selector text
parser define selector code
parser define selector math
parser define selector operator 1
parser print selector "":
    block standard: operator 1
    block standard: math
    block standard: text
    block standard: code
    block TOP LEVEL: parser
parser print context "default":
    block standard: default [code]
    block TOP LEVEL: default [ ]
parser define bracket "(" ... ")" [code, math, text]
parser define bracket "[" ... "]" [code, math, text]
parser print bracket "[":
    block standard: bracket "[" ... "]" [code, text, math]
    block TOP LEVEL: bracket "[" ... "]" [parser]
parser define gluing indentation mark ":" ... ";" [code, math, text]
parser print bracket ":":
    block standard: gluing indentation mark ":" ... ";"
                    [code, text, math]
ERROR: in line 27: unrecognized flag name:
parser define bracket "[+" ... "+]" [text, operator 2]
                                           ^^^^^^^^^^
ERROR: in line 28: expected `,' after:
parser define bracket "<+" ... "+>" [text + operator]
                                     ^^^^
parser define bracket "<+" ... "+>" [code, operator 1]
       with parsing selectors [^ code, - math, + operator 1]
       with full lines
parser print bracket "<+":
    block standard: bracket "<+" ... "+>" [code, operator 1]
                    with parsing selectors [^ code, - math,
                                            + operator 1]
                    with full lines
parser trace [ + subexpression lines,
               + subexpression elements]
======= TEST: parser test "abcdef"
------- lines 36-37:
parser test "abc"
^^^^^^^^^^^^^^^^^
            "def"
^^^^^^^^^^^^^^^^^
------- lines 36-37:
parser test "abc"
            ^^^^^
            "def"
^^^^^^^^^^^^^^^^^
======= END TEST
======= TEST: parser test :
                  "abc"
                  "def"
------- lines 38-40:
parser test:
^^^^^^^^^^^^
        "abc"
^^^^^^^^^^^^^
        "def"
^^^^^^^^^^^^^
------- lines 38-40:
parser test:
           ^
        "abc"
^^^^^^^^^^^^^
        "def"
^^^^^^^^^^^^^
------- line 39:
        "abc"
        ^^^^^
------- line 39:
        "abc"
        ^^^^^
------- line 40:
        "def"
        ^^^^^
------- line 40:
        "def"
        ^^^^^
======= END TEST
======= TEST: parser test <+ hi there +> <+ hi "[" embedded "]" there +>
------- line 42:
parser test <+ hi there +> <+ hi [embedded] there +>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 42:
parser test <+ hi there +> <+ hi [embedded] there +>
            ^^^^^^^^^^^^^^
------- line 42:
parser test <+ hi there +> <+ hi [embedded] there +>
                           ^^^^^^^^^^^^^^^^^^^^^^^^^
======= END TEST
parser define bracket "[X" ... "X]" [code, operator 1]
       with parsing selectors [- code, + operator 1]
======= TEST: parser test [ a [ b c ] c ] [X a "[" b c "]" d X]
------- line 45:
parser test [ a [ b c ] c ] [X a [ b c ] d X]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 45:
parser test [ a [ b c ] c ] [X a [ b c ] d X]
            ^^^^^^^^^^^^^^^
------- line 45:
parser test [ a [ b c ] c ] [X a [ b c ] d X]
                ^^^^^^^
------- line 45:
parser test [ a [ b c ] c ] [X a [ b c ] d X]
                            ^^^^^^^^^^^^^^^^^
======= END TEST
======= TEST: parser test this is a paragraph + :
                  line 1
                  line 2 a "::" line 2 b; line 2 c
                  last line
------- lines 46-49:
parser test this is a paragraph +:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    line 1
^^^^^^^^^^
    line 2a:: line 2b; line 2c
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    last line
^^^^^^^^^^^^^
------- lines 46-49:
parser test this is a paragraph +:
                                 ^
    line 1
^^^^^^^^^^
    line 2a:: line 2b; line 2c
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    last line
^^^^^^^^^^^^^
------- line 47:
    line 1
    ^^^^^^
------- line 48:
    line 2a:: line 2b; line 2c
    ^^^^^^^^^^^^^^^^^^
------- line 48:
    line 2a:: line 2b; line 2c
                       ^^^^^^^
------- line 49:
    last line
    ^^^^^^^^^
======= END TEST
parser define indentation mark "+:" ... "::" [code]
======= TEST: parser test this is a paragraph
                  {+ ":"| {"<LF>"| line 1 |"<LF>"} {:: line 2 a ::}
                          {"<LF>"| line 2 b ";" line 2 c |"<LF>"}
                          {"<LF>"| last line |"<LF>"} |+ ":"}
------- lines 51-54:
parser test this is a paragraph +:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    line 1
^^^^^^^^^^
    line 2a:: line 2b; line 2c
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    last line
^^^^^^^^^^^^^
------- lines 51-54:
parser test this is a paragraph +:
                                ^^
    line 1
^^^^^^^^^^
    line 2a:: line 2b; line 2c
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    last line
^^^^^^^^^^^^^
------- line 52:
    line 1
    ^^^^^^
------- line 53:
    line 2a:: line 2b; line 2c
    ^^^^^^^^^
------- line 53:
    line 2a:: line 2b; line 2c
              ^^^^^^^^^^^^^^^^
------- line 54:
    last line
    ^^^^^^^^^
======= END TEST
======= TEST: parser test < X | hi there | X >
------- line 55:
parser test  <X| hi there |X>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
======= END TEST
ERROR: in line 56: unrecognized flag name:
parser trace [+ foo]
                ^^^
parser trace [+ parser commands]
parser trace [+ parser commands]
parser trace [+ warnings]
parser begin block 1
parser define bracket "<*" ... "*>" [code]
======= TEST: parser test <* hi there A *>
------- line 63:
parser test <* hi there A *>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 63:
parser test <* hi there A *>
            ^^^^^^^^^^^^^^^^
======= END TEST
ERROR: in line 64: innermost block name does not match `block x':
parser end block x
^^^^^^^^^^^^^^^^^^
======= TEST: parser test <* hi there B *>
------- line 65:
parser test <* hi there B *>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 65:
parser test <* hi there B *>
            ^^^^^^^^^^^^^^^^
======= END TEST
parser end block 1
======= TEST: parser test <* hi there C *>
------- line 67:
parser test <* hi there C *>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
======= END TEST
ERROR: in line 68: innermost block name does not match `block 1':
parser end block 1
^^^^^^^^^^^^^^^^^^
parser define bracket "<|" ... "|>" [code]
======= TEST: parser test < | hi there D | >
------- line 70:
parser test <| hi there D |>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 70:
parser test <| hi there D |>
            ^^^^^^^^^^^^^^^^
======= END TEST
parser begin block 1
parser undefine bracket "<|" ... "|>" [code]
======= TEST: parser test < | hi there E | >
------- line 73:
parser test <| hi there E |>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
======= END TEST
WARNING: in line 74: undefine found no definition:
parser undefine bracket "<|" ... "|>" [code]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
parser undefine bracket "<|" ... "|>" [code]
parser end block 1
======= TEST: parser test < | hi there F | >
------- line 76:
parser test <| hi there F |>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 76:
parser test <| hi there F |>
            ^^^^^^^^^^^^^^^^
======= END TEST
parser undefine bracket "<|" ... "|>" [code]
======= TEST: parser test < | hi there F | >
------- line 78:
parser test <| hi there F |>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
======= END TEST
WARNING: in line 79: undefine found no definition:
parser undefine bracket "<|" ... "|>" [code]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
parser undefine bracket "<|" ... "|>" [code]
parser define bracket "`" ... "'" [code]
parser define bracket "```" ... "'''" [code]
       with full lines
parser print bracket "":
    block standard: bracket [: "[" "X" :] ... [: "X" "]" :]
                    [code, operator 1]
                    with parsing selectors [- code, + operator 1]
    block standard: bracket "(" ... ")" [code, text, math]
    block TOP LEVEL: bracket "(" ... ")" [parser]
    block standard: gluing indentation mark ":" ... ";"
                    [code, text, math]
    block standard: bracket "[" ... "]" [code, text, math]
    block TOP LEVEL: bracket "[" ... "]" [parser]
    block standard: bracket "`" ... "'" [code]
    block standard: bracket [: "`" "`" "`" :] ... [: "'" "'" "'" :]
                    [code]
                    with full lines
    block standard: bracket [: "<" "|" :] ... [: "|" ">" :] [ ]
    block standard: indentation mark [: "+" ":" :] ... "::" [code]
    block TOP LEVEL: indentation mark [: "TOP" "LEVEL" :] ... ";" [ ]
    block standard: bracket "<+" ... "+>" [code, operator 1]
                    with parsing selectors [^ code, - math,
                                            + operator 1]
                    with full lines
======= TEST: parser test ( ``` ")" ''' )
------- line 85:
parser test ( ``` ) ''' )
^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 85:
parser test ( ``` ) ''' )
            ^^^^^^^^^^^^^
------- line 85:
parser test ( ``` ) ''' )
              ^^^^^^^^^
======= END TEST
======= TEST: parser test ( ``` ")" ''' )
------- lines 86-88:
parser test ( ```
^^^^^^^^^^^^^^^^^
)
^
''' )
^^^^^
------- lines 86-88:
parser test ( ```
            ^^^^^
)
^
''' )
^^^^^
------- lines 86-88:
parser test ( ```
              ^^^
)
^
''' )
^^^
======= END TEST
ERROR: missing closing bracket "'" inserted before ")"; line 89:
parser test ( ` ) ' )
                ^
======= TEST: parser test ( ` ' ) ' )
------- line 89:
parser test ( ` ) ' )
^^^^^^^^^^^^^^^^^^^^^
------- line 89:
parser test ( ` ) ' )
            ^^^^^
------- line 89:
parser test ( ` ) ' )
              ^
======= END TEST
ERROR: missing closing bracket "'" inserted before end of line; line 90:
parser test ( `
               ^
ERROR: missing closing bracket ")" inserted before end of line; line 90:
parser test ( `
               ^
======= TEST: parser test ( ` ' )
------- line 90:
parser test ( `
^^^^^^^^^^^^^^^
------- line 90:
parser test ( `
            ^^^
------- line 90:
parser test ( `
              ^
======= END TEST
parser begin block 1
parser define indentation offset 4
parser print indentation offset:
    block block 1: 4
    block standard: 2
    block TOP LEVEL: 2
ERROR: lexeme indent 1 too near paragraph indent 0; line 98:
 line with indent 1
 ^^^^
ERROR: lexeme indent 2 too near paragraph indent 0; line 100:
  line with indent 2
  ^^^^
parser end block 1
parser print indentation offset:
    block standard: 2
    block TOP LEVEL: 2
ERROR: lexeme indent 1 too near paragraph indent 0; line 107:
 line with indent 1
 ^^^^
