BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ";"
     OF SUBTYPE ll::parser::table::line_sep_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY ";"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ";"
     OF SUBTYPE ll::parser::table::line_sep_type
BRACKETED EXPRESSION:
    This is a line;
@1 = This is a line:
         .terminator = ";"
         .initiator = [$ LOGICAL_LINE $]
         .position[H] = {}
    line 11:
This is a line;
^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This is a line containing a "quoted<SP>string" "."
@2 = This is a line containing a @3 ".":
         .terminator = "<LF>"
         .position[H] = {}
         .initiator = [$ LOGICAL_LINE $]
@3 = "quoted<SP>string":
         .type = "<Q>"
    line 12:
This is a line containing a "quoted string".
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This is a line containing a large number 12345678901234567890 "."
@4 = This is a line containing a large number 12345678901234567890 ".":
         .terminator = "<LF>"
         .position[H] = {}
         .initiator = [$ LOGICAL_LINE $]
    lines 13-14:
This is a line containing a large number
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     12345678901234567890.
^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    (hi there)
@5 = hi there:
         .terminator = ")"
         .initiator = "("
         .position[H] = {}
    line 16:
     ( hi there ).
     ^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This is a line containing a parenthesized subexpression (hi there)
        "."
@6 = This is a line containing a parenthesized subexpression @5 ".":
         .terminator = "<LF>"
         .position[H] = {}
         .initiator = [$ LOGICAL_LINE $]
    lines 15-16:
This is a line containing a parenthesized subexpression
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     ( hi there ).
^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    (x 5 "foo")
@7 = x 5 @8:
         .terminator = ")"
         .initiator = "("
         .position[H] = {}
@8 = foo:
         .type = "<Q>"
    line 17:
This line contains subsubexpressions (x 5 "foo")
                                     ^^^^^^^^^^^
BRACKETED EXPRESSION:
    This line contains subsubexpressions (x 5 "foo")
@9 = This line contains subsubexpressions @7:
         .terminator = "<LF>"
         .position[H] = {}
         .initiator = [$ LOGICAL_LINE $]
    line 17:
This line contains subsubexpressions (x 5 "foo")
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "`"
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "{" "{" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "}" "}" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY [< "}" "}" >]
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "}" "}" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    {{p q}}
@10 = p q:
          .terminator = [< "}" "}" >]
          .initiator = [< "{" "{" >]
          .position[H] = {}
    line 19:
     (x + `y z {{p q}}' - [ g h ]).
               ^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "'"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY "'"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "'"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    `y z {{p q}}'
@11 = y z @10:
          .terminator = "'"
          .initiator = "`"
          .position[H] = {}
    line 19:
     (x + `y z {{p q}}' - [ g h ]).
          ^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "["
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "]"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    [g h]
@12 = g h:
          .terminator = "]"
          .initiator = "["
          .position[H] = {}
    line 19:
     (x + `y z {{p q}}' - [ g h ]).
                          ^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    (x + `y z {{p q}}' - [g h])
@13 = x + @11 - @12:
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 19:
     (x + `y z {{p q}}' - [ g h ]).
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This line contains more subsubexpressions
        (x + `y z {{p q}}' - [g h]) "."
@14 = This line contains more subsubexpressions @13 ".":
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 18-19:
This line contains more subsubexpressions
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     (x + `y z {{p q}}' - [ g h ]).
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "{" "{" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 21: missing closing bracket [< "}" "}" >] inserted
       before ")":
     (x + {{ y z )
                 ^
BRACKETED EXPRESSION:
    {{y z}}
@15 = y z:
          .terminator = [< "}" "}" >]
          .initiator = [< "{" "{" >]
          .position[H] = {}
    line 21:
     (x + {{ y z )
          ^^^^^^
BRACKETED EXPRESSION:
    (x + {{y z}})
@16 = x + @15:
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 21:
     (x + {{ y z )
     ^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This line contains a missing closing bracket (x + {{y z}})
@17 = This line contains a missing closing bracket @16:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 20-21:
This line contains a missing closing bracket
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     (x + {{ y z )
^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "}" "}" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY [< "}" "}" >]
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "}" "}" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY [< "}" "}" >]
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY "}"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY "}"
ERROR: in line 24: missing closing bracket ")" inserted just before
       here:
This line includes
^
BRACKETED EXPRESSION:
    (x + y "}" "}")
@18 = x + y "}" "}":
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 23:
     (x + y }}
     ^^^^^^^^^
BRACKETED EXPRESSION:
    This line contains an incorrect closing bracket (x + y "}" "}")
@19 = This line contains an incorrect closing bracket @18:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 22-23:
This line contains an incorrect closing bracket
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     (x + y }}
^^^^^^^^^^^^^^
WARNING: in line 25: lexeme indent 1 too near paragraph indent 0:
 a token with insufficient indent
 ^
BRACKETED EXPRESSION:
    This line includes a token with insufficient indent
@20 = This line includes a token with insufficient indent:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 24-25:
This line includes
^^^^^^^^^^^^^^^^^^
 a token with insufficient indent
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY ":"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::indentation_mark_type
BRACKETED EXPRESSION:
    First line "."
@21 = First line ".":
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 27:
   First line.
   ^^^^^^^^^^^
BRACKETED EXPRESSION:
    Second line "."
@22 = Second line ".":
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 28:
   Second line.
   ^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
              First line "."|}
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
              Second line "."|}|}
@23 = @21 @22:
          .terminator = [$ INDENTED_PARAGRAPH $]
          .position[H] = {}
          .initiator = ":"
    lines 26-28:
This line starts an indented paragraph:
                                      ^
   First line.
^^^^^^^^^^^^^^
   Second line.
^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This line starts an indented paragraph:
        First line "."
        Second line "."
@24 = This line starts an indented paragraph @23:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 26-28:
This line starts an indented paragraph:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   First line.
^^^^^^^^^^^^^^
   Second line.
^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY "="
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY ":"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::indentation_mark_type
BRACKETED EXPRESSION:
    Third line "."
@25 = Third line ".":
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 30:
   Third line.
   ^^^^^^^^^^^
BRACKETED EXPRESSION:
    Fourth line "."
@26 = Fourth line ".":
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 31:
   Fourth line.
   ^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
              Third line "."|}
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
              Fourth line "."|}|}
@27 = @25 @26:
          .terminator = [$ INDENTED_PARAGRAPH $]
          .position[H] = {}
          .initiator = ":"
    lines 29-31:
Ditto with split =:
                  ^
   Third line.
^^^^^^^^^^^^^^
   Fourth line.
^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    Ditto with split =:
        Third line "."
        Fourth line "."
@28 = Ditto with split = @27:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 29-31:
Ditto with split =:
^^^^^^^^^^^^^^^^^^^
   Third line.
^^^^^^^^^^^^^^
   Fourth line.
^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY ":"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::indentation_mark_type
BRACKETED EXPRESSION:
    Fifth line "."
@29 = Fifth line ".":
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 33:
   Fifth line.
   ^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ";"
     OF SUBTYPE ll::parser::table::line_sep_type
BRACKETED EXPRESSION:
    Sixth line A;
@30 = Sixth line A:
          .terminator = ";"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 34:
   Sixth line A; Sixth line B
   ^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    Sixth line B
@31 = Sixth line B:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 34:
   Sixth line A; Sixth line B
                 ^^^^^^^^^^^^
BRACKETED EXPRESSION:
    Seventh line "."
@32 = Seventh line ".":
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 35:
   Seventh line.
   ^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
              Fifth line "."|}
         {"": .terminator = ";", .initiator = [$ LOGICAL_LINE $]|Sixth
              line A|}
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
              Sixth line B|}
         {"": .terminator = "<LF>", .initiator = [$ LOGICAL_LINE $]|
              Seventh line "."|}|}
@33 = @29 @30 @31 @32:
          .terminator = [$ INDENTED_PARAGRAPH $]
          .position[H] = {}
          .initiator = ":"
    lines 32-35:
Ditto with separator:
                    ^
   Fifth line.
^^^^^^^^^^^^^^
   Sixth line A; Sixth line B
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   Seventh line.
^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    Ditto with separator:
        Fifth line "."
        Sixth line A; Sixth line B
        Seventh line "."
@34 = Ditto with separator @33:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 32-35:
Ditto with separator:
^^^^^^^^^^^^^^^^^^^^^
   Fifth line.
^^^^^^^^^^^^^^
   Sixth line A; Sixth line B
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   Seventh line.
^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "+>"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY "+>"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "->"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY "->"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "{" "{" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "<+"
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "+>"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    <+ x +>
@35 = x:
          .terminator = "+>"
          .initiator = "<+"
          .position[H] = {}
    line 42:
     {{ <+ x +> <- y ->}} `<+ x +> <- y ->'
        ^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "->"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY "->"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "}" "}" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY [< "}" "}" >]
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "}" "}" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    {{<+ x +> <- y ->}}
@36 = @35 <- y ->:
          .terminator = [< "}" "}" >]
          .initiator = [< "{" "{" >]
          .position[H] = {}
    line 42:
     {{ <+ x +> <- y ->}} `<+ x +> <- y ->'
     ^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "`"
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "+>"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY "+>"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "<-"
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "->"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    <- y ->
@37 = y:
          .terminator = "->"
          .initiator = "<-"
          .position[H] = {}
    line 42:
     {{ <+ x +> <- y ->}} `<+ x +> <- y ->'
                                   ^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "'"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY "'"
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "'"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    `<+ x +> <- y ->'
@38 = <+ x +> @37:
          .terminator = "'"
          .initiator = "`"
          .position[H] = {}
    line 42:
     {{ <+ x +> <- y ->}} `<+ x +> <- y ->'
                          ^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This tests selector changes --- <+ x +> <- y -> {{<+ x +> <- y ->}}
        `<+ x +> <- y ->'
@39 = This tests selector changes --- <+ x +> <- y -> @36 @38:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 41-42:
This tests selector changes --- <+ x +> <- y ->
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     {{ <+ x +> <- y ->}} `<+ x +> <- y ->'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "<" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< ">" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
DERIVED EXPRESSION:
    [< x y hello 5.6 z >]
@40 = [< x y hello 5.6 z >]
    line 44:
This is a label [< x y "hello" 5.6 z >]
                ^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This is a label [< x y hello 5.6 z >]
@41 = This is a label [< x y hello 5.6 z >]:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 44:
This is a label [< x y "hello" 5.6 z >]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "<" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    (y)
@42 = y:
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 45:
This is another label [< x ( y ) z >]
                           ^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< ">" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 45: subexpression (y) illegal for label element; changed
       to ERRONEOUS-LABEL-COMPONENT:
This is another label [< x ( y ) z >]
                           ^^^^^
DERIVED EXPRESSION:
    [< x ERRONEOUS-LABEL-COMPONENT z >]
@43 = [< x ERRONEOUS-LABEL-COMPONENT z >]
    line 45:
This is another label [< x ( y ) z >]
                      ^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    This is another label [< x ERRONEOUS-LABEL-COMPONENT z >]
@44 = This is another label [< x ERRONEOUS-LABEL-COMPONENT z >]:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 45:
This is another label [< x ( y ) z >]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "<" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "<" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< ">" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
DERIVED EXPRESSION:
    [< 1 2 >]
@45 = [< 1 2 >]
    line 46:
And these are nested labels [< x [< 1 2 >] y [< a b >] >]
                                 ^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "<" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< ">" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
DERIVED EXPRESSION:
    [< a b >]
@46 = [< a b >]
    line 46:
And these are nested labels [< x [< 1 2 >] y [< a b >] >]
                                             ^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< ">" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
DERIVED EXPRESSION:
    [< x [< 1 2 >] y [< a b >] >]
@47 = [< x [< 1 2 >] y [< a b >] >]
    line 46:
And these are nested labels [< x [< 1 2 >] y [< a b >] >]
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    And these are nested labels [< x [< 1 2 >] y [< a b >] >]
@48 = And these are nested labels [< x [< 1 2 >] y [< a b >] >]:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 46:
And these are nested labels [< x [< 1 2 >] y [< a b >] >]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    {x|1 2 3|x}
@49 = 1 2 3:
          .type = "x"
          .position[H] = {}
    line 47:
This line contains a typed subexpression {x|1 2 3|}
                                         ^^^^^^^^^^
BRACKETED EXPRESSION:
    This line contains a typed subexpression {x|1 2 3|x}
@50 = This line contains a typed subexpression @49:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 47:
This line contains a typed subexpression {x|1 2 3|}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ","
     OF SUBTYPE ll::parser::table::typed_attr_sep_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ","
     OF SUBTYPE ll::parser::table::typed_attr_sep_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    {x: y = "6", z = [< "b" "c" "5" "d" >], w|1 2 3|x}
@51 = 1 2 3:
          .type = "x"
          y = "6"
          z = [< "b" "c" "5" "d" >]
          w
          .position[H] = {}
    line 49:
    {x: w, y = 6, z = b c 5 d|1 2 3|}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    Another typed subexpression
        {x: y = "6", z = [< "b" "c" "5" "d" >], w|1 2 3|x}
@52 = Another typed subexpression @51:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 48-49:
Another typed subexpression
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {x: w, y = 6, z = b c 5 d|1 2 3|}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ","
     OF SUBTYPE ll::parser::table::typed_attr_sep_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    {x: y = "6", z = [< "b" "c" "5" "d" >], w|1 2 3|x}
@53 = 1 2 3:
          .type = "x"
          y = "6"
          z = [< "b" "c" "5" "d" >]
          w
          .position[H] = {}
    line 51:
    {x: w, z = b c 5 d|1 2 3|y = 6 : x}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    Yet another typed subexpression
        {x: y = "6", z = [< "b" "c" "5" "d" >], w|1 2 3|x}
@54 = Yet another typed subexpression @53:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 50-51:
Yet another typed subexpression
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {x: w, z = b c 5 d|1 2 3|y = 6 : x}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "["
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "]"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    [ABC_,200]
@55 = ABC_,200:
          .terminator = "]"
          .initiator = "["
          .position[H] = {}
    line 52:
And another- {| x y z |b[ABC_,200] = (1 2 3),
                        ^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    (1 2 3)
@56 = 1 2 3:
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 52:
And another- {| x y z |b[ABC_,200] = (1 2 3),
                                     ^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ","
     OF SUBTYPE ll::parser::table::typed_attr_sep_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "no"
     OF SUBTYPE ll::parser::table::typed_attr_negator_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "["
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "]"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    [+]
@57 = +:
          .terminator = "]"
          .initiator = "["
          .position[H] = {}
    line 53:
                       no c[+], d[-], no f, g : t}
                           ^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ","
     OF SUBTYPE ll::parser::table::typed_attr_sep_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "["
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "]"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    [-]
@58 = -:
          .terminator = "]"
          .initiator = "["
          .position[H] = {}
    line 53:
                       no c[+], d[-], no f, g : t}
                                 ^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ","
     OF SUBTYPE ll::parser::table::typed_attr_sep_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "no"
     OF SUBTYPE ll::parser::table::typed_attr_negator_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ","
     OF SUBTYPE ll::parser::table::typed_attr_sep_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 52: bad flag(s) "_" in "ABC_,200":
And another- {| x y z |b[ABC_,200] = (1 2 3),
                         ^^^^^^^^
BRACKETED EXPRESSION:
    {t: d[-], no f, b[ABC,200] = (1 2 3), g, no c[+]|x y z|t}
@59 = x y z:
          .type = "t"
          d[-]
          no f
          b[ABC,200] = (1 2 3)
          g
          no c[+]
          .position[H] = {}
    lines 52-53:
And another- {| x y z |b[ABC_,200] = (1 2 3),
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       no c[+], d[-], no f, g : t}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    And another-
        {t: d[-], no f, b[ABC,200] = (1 2 3), g, no c[+]|x y z|t}
@60 = And another- @59:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    lines 52-53:
And another- {| x y z |b[ABC_,200] = (1 2 3),
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       no c[+], d[-], no f, g : t}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "["
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ","
     OF SUBTYPE ll::parser::table::typed_attr_sep_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY ","
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ","
     OF SUBTYPE ll::parser::table::typed_attr_sep_type
BRACKETED SUBEXPRESSION PARSER REJECTED KEY ","
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "["
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "]"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    [5]
@61 = 5:
          .terminator = "]"
          .initiator = "["
          .position[H] = {}
    line 54:
And one more {| |b["A", 201,202, [5]]: t}
                                 ^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "]"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    ["A" "," {# 201,202 #} "," [5]]
@62 = @63 "," @64 "," @61:
          .terminator = "]"
          .initiator = "["
          .position[H] = {}
@63 = A:
          .type = "<Q>"
@64 = 201,202:
          .type = "#"
    line 54:
And one more {| |b["A", 201,202, [5]]: t}
                  ^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 54: bad flags specifier [5]:
And one more {| |b["A", 201,202, [5]]: t}
                                 ^^^
BRACKETED EXPRESSION:
    {t: b[A,201,202]||t}
@65 =:
          .type = "t"
          b[A,201,202]
          .position[H] = {}
        line 54:
And one more {| |b["A", 201,202, [5]]: t}
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    And one more {t: b[A,201,202]||t}
@66 = And one more @65:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
        line 54:
And one more {| |b["A", 201,202, [5]]: t}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
PURELIST EXPRESSION:
    {}
@67 =:
          .position[H] = {}
    line 55:
{}
^^
BRACKETED EXPRESSION:

@67 =:
          .terminator = "<LF>"
          .initiator = [$ LOGICAL_LINE $]
          .position[H] = {}
    line 55:
{}
^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 56: missing closing bracket "}" inserted before ")":
({)
  ^
PURELIST EXPRESSION:
    {}
@68 =:
          .position[H] = {}
    line 56:
({)
 ^
BRACKETED EXPRESSION:
    ()
@68 =:
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 56:
({)
^^^
BRACKETED EXPRESSION:
    ()
@69 = @68:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 56:
({)
^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 57: missing "|"; inserted before:
{W|1 2 3}
        ^
BRACKETED EXPRESSION:
    {W|1 2 3|W}
@70 = 1 2 3:
          .type = "W"
          .position[H] = {}
    line 57:
{W|1 2 3}
^^^^^^^^^
BRACKETED EXPRESSION:
    {W|1 2 3|W}
@71 = @70:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 57:
{W|1 2 3}
^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 58: missing "|"; inserted before:
{W|1 2|p = q|3}
              ^
BRACKETED EXPRESSION:
    {W: p = "q"|1 2 3|W}
@72 = 1 2 3:
          p = "q"
          .type = "W"
          .position[H] = {}
    line 58:
{W|1 2|p = q|3}
^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {W: p = "q"|1 2 3|W}
@73 = @72:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 58:
{W|1 2|p = q|3}
^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 59: missing attribute label:
{P:}
   ^
PREFIX EXPRESSION:
    {P||P}
@74 =:
          .type = "P"
          .position[H] = {}
    line 59:
{P:}
^^^^
BRACKETED EXPRESSION:
    {P||P}
@74 =:
          .type = "P"
          .position[H] = {}
    line 59:
{P:}
^^^^
BRACKETED EXPRESSION:
    {P||P}
@75 = @74:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 59:
{P:}
^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 60: missing attribute label:
({P2:)
     ^
ERROR: in line 60: missing closing bracket "}" inserted before ")":
({P2:)
     ^
PREFIX EXPRESSION:
    {P2||P2}
@76 =:
          .type = "P2"
          .position[H] = {}
    line 60:
({P2:)
 ^^^^
BRACKETED EXPRESSION:
    {P2||P2}
@76 =:
          .type = "P2"
          .position[H] = {}
    line 60:
({P2:)
 ^^^^
BRACKETED EXPRESSION:
    ({P2||P2})
@77 = @76:
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 60:
({P2:)
^^^^^^
BRACKETED EXPRESSION:
    ({P2||P2})
@78 = @77:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 60:
({P2:)
^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
ERROR: in line 61: unexpected punctuation ":" found; deleted and
       ignored:
({:)
  ^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 61: missing closing bracket "}" inserted before ")":
({:)
   ^
PURELIST EXPRESSION:
    {}
@79 =:
          .position[H] = {}
    line 61:
({:)
 ^^
BRACKETED EXPRESSION:
    ()
@79 =:
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 61:
({:)
^^^^
BRACKETED EXPRESSION:
    ()
@80 = @79:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 61:
({:)
^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 62: missing type:
{P: f = F|1 2 3|g = G:}
                      ^
BRACKETED EXPRESSION:
    {P: f = "F", g = "G"|1 2 3|P}
@81 = 1 2 3:
          .type = "P"
          f = "F"
          g = "G"
          .position[H] = {}
    line 62:
{P: f = F|1 2 3|g = G:}
^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {P: f = "F", g = "G"|1 2 3|P}
@82 = @81:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 62:
{P: f = F|1 2 3|g = G:}
^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 63: missing "|"; inserted before:
({M: f = F|1 2 3)
                ^
ERROR: in line 63: missing closing bracket "}" inserted before ")":
({M: f = F|1 2 3)
                ^
BRACKETED EXPRESSION:
    {M: f = "F"|1 2 3|M}
@83 = 1 2 3:
          .type = "M"
          f = "F"
          .position[H] = {}
    line 63:
({M: f = F|1 2 3)
 ^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    ({M: f = "F"|1 2 3|M})
@84 = @83:
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 63:
({M: f = F|1 2 3)
^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    ({M: f = "F"|1 2 3|M})
@85 = @84:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 63:
({M: f = F|1 2 3)
^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 64: missing closing bracket "}" inserted before ")":
({N: f = F|1 2 3|g = G)
                      ^
BRACKETED EXPRESSION:
    {N: f = "F", g = "G"|1 2 3|N}
@86 = 1 2 3:
          .type = "N"
          f = "F"
          g = "G"
          .position[H] = {}
    line 64:
({N: f = F|1 2 3|g = G)
 ^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    ({N: f = "F", g = "G"|1 2 3|N})
@87 = @86:
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 64:
({N: f = F|1 2 3|g = G)
^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    ({N: f = "F", g = "G"|1 2 3|N})
@88 = @87:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 64:
({N: f = F|1 2 3|g = G)
^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "("
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ")"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 65: missing attribute value:
({K: f = F|1 2 3|g =)
                    ^
ERROR: in line 65: missing closing bracket "}" inserted before ")":
({K: f = F|1 2 3|g =)
                    ^
BRACKETED EXPRESSION:
    {K: f = "F", g = "OMITTED<SP>ATTRIBUTE<SP>VALUE"|1 2 3|K}
@89 = 1 2 3:
          .type = "K"
          f = "F"
          g = "OMITTED<SP>ATTRIBUTE<SP>VALUE"
          .position[H] = {}
    line 65:
({K: f = F|1 2 3|g =)
 ^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    ({K: f = "F", g = "OMITTED<SP>ATTRIBUTE<SP>VALUE"|1 2 3|K})
@90 = @89:
          .terminator = ")"
          .initiator = "("
          .position[H] = {}
    line 65:
({K: f = F|1 2 3|g =)
^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    ({K: f = "F", g = "OMITTED<SP>ATTRIBUTE<SP>VALUE"|1 2 3|K})
@91 = @90:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 65:
({K: f = F|1 2 3|g =)
^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    {S: x = "A", y = "B", z = "C"|1 2 3 4|S}
@92 = 1 2 3 4:
          x = "A"
          .type = "S"
          y = "B"
          z = "C"
          .position[H] = {}
    line 66:
{S: x = A|1 2|y = B|3 4|z = C}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {S: x = "A", y = "B", z = "C"|1 2 3 4|S}
@93 = @92:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 66:
{S: x = A|1 2|y = B|3 4|z = C}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    {T: x = "A", y = "B", z = "C"|1 2 3 4|T}
@94 = 1 2 3 4:
          x = "A"
          .type = "T"
          y = "B"
          z = "C"
          .position[H] = {}
    line 67:
{T: x = A|1 2|y = B|3 4|z = C: T}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {T: x = "A", y = "B", z = "C"|1 2 3 4|T}
@95 = @94:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 67:
{T: x = A|1 2|y = B|3 4|z = C: T}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "|"
     OF SUBTYPE ll::parser::table::typed_middle_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "="
     OF SUBTYPE ll::parser::table::typed_attr_equal_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY ":"
     OF SUBTYPE ll::parser::table::typed_attr_begin_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 68: beginning type "T" != end type "S"; end type ignored:
{T: x = A|1 2|y = B|3 4|z = C: S}
                               ^
BRACKETED EXPRESSION:
    {T: x = "A", y = "B", z = "C"|1 2 3 4|T}
@96 = 1 2 3 4:
          x = "A"
          .type = "T"
          y = "B"
          z = "C"
          .position[H] = {}
    line 68:
{T: x = A|1 2|y = B|3 4|z = C: S}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {T: x = "A", y = "B", z = "C"|1 2 3 4|T}
@97 = @96:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 68:
{T: x = A|1 2|y = B|3 4|z = C: S}
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    {- a b c -}
@98 = a b c:
          .type = "-"
          .position[H] = {}
    line 69:
{- a b c -}
^^^^^^^^^^^
BRACKETED EXPRESSION:
    {- a b c -}
@99 = @98:
          .terminator = "<LF>"
          .position[H] = {}
          .initiator = [$ LOGICAL_LINE $]
    line 69:
{- a b c -}
^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    {< a b c >}
@100 = a b c:
           .type = [< "<" ">" >]
           .position[H] = {}
    line 70:
{< a b c >}
^^^^^^^^^^^
BRACKETED EXPRESSION:
    {< a b c >}
@101 = @100:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
    line 70:
{< a b c >}
^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 71: missing "-" at end of typed bracketed expression;
       inserted before:
{- a b c}
        ^
BRACKETED EXPRESSION:
    {- a b c -}
@102 = a b c:
           .type = "-"
           .position[H] = {}
    line 71:
{- a b c}
^^^^^^^^^
BRACKETED EXPRESSION:
    {- a b c -}
@103 = @102:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
    line 71:
{- a b c}
^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "{"
     OF SUBTYPE ll::parser::table::typed_opening_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY "}"
     OF SUBTYPE ll::parser::table::closing_bracket_type
BRACKETED EXPRESSION:
    {-  -}
@104 =:
           .type = "-"
           .position[H] = {}
    line 72:
{-}
^^^
BRACKETED EXPRESSION:
    {-  -}
@105 = @104:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
    line 72:
{-}
^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "$" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "$" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
DERIVED EXPRESSION:
    [$ MISSING $]
@(NONE) = [$ MISSING $]
    line 73:
[$ MISSING $]
^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    [$ MISSING $]
@106 = [$ MISSING $]:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
    line 73:
[$ MISSING $]
^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "$" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "$" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
DERIVED EXPRESSION:
    [$ INDENTED_PARAGRAPH $]
@(NONE) = [$ INDENTED_PARAGRAPH $]
    line 74:
[$ INDENTED_PARAGRAPH $]
^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    [$ INDENTED_PARAGRAPH $]
@107 = [$ INDENTED_PARAGRAPH $]:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
    line 74:
[$ INDENTED_PARAGRAPH $]
^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "$" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "$" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 75: subexpression "FOOBAR" unrecognized special name;
       changed to ERROR:
[$ FOOBAR $]
   ^^^^^^
DERIVED EXPRESSION:
    [$ ERROR $]
@(NONE) = [$ ERROR $]
    line 75:
[$ FOOBAR $]
^^^^^^^^^^^^
BRACKETED EXPRESSION:
    [$ ERROR $]
@108 = [$ ERROR $]:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
    line 75:
[$ FOOBAR $]
^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "<" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< ">" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
DERIVED EXPRESSION:
    [< hi there >]
@109 = [< hi there >]
    line 76:
[< hi there >]
^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    [< hi there >]
@110 = [< hi there >]:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
    line 76:
[< hi there >]
^^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "<" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< ">" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
DERIVED EXPRESSION:
    hi
@(NONE) = hi
    line 77:
[< hi >]
^^^^^^^^
BRACKETED EXPRESSION:
    hi
@111 = hi:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
    line 77:
[< hi >]
^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "<" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< ">" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
DERIVED EXPRESSION:
    [< >]
@112 = [< >]
    line 78:
[< >]
^^^^^
BRACKETED EXPRESSION:
    [< >]
@113 = [< >]:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
    line 78:
[< >]
^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "<" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "[" "$" >]
     OF SUBTYPE ll::parser::table::opening_bracket_type
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< "$" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
DERIVED EXPRESSION:
    [$ MISSING $]
@(NONE) = [$ MISSING $]
    line 79:
[< [$ MISSING $] >]
   ^^^^^^^^^^^^^
BRACKETED SUBEXPRESSION PARSER FOUND SELECTED KEY [< ">" "]" >]
     OF SUBTYPE ll::parser::table::closing_bracket_type
ERROR: in line 79: subexpression [$ MISSING $] illegal for label
       element; changed to ERRONEOUS-LABEL-COMPONENT:
[< [$ MISSING $] >]
   ^^^^^^^^^^^^^
DERIVED EXPRESSION:
    ERRONEOUS-LABEL-COMPONENT
@114 = ERRONEOUS-LABEL-COMPONENT
    line 79:
[< [$ MISSING $] >]
^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    ERRONEOUS-LABEL-COMPONENT
@115 = ERRONEOUS-LABEL-COMPONENT:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
    line 79:
[< [$ MISSING $] >]
^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    parser print bracket ""
@116 = parser print bracket @117:
           .terminator = "<LF>"
           .position[H] = {}
           .initiator = [$ LOGICAL_LINE $]
@117 = "":
           .type = "<Q>"
    line 80:
parser print bracket ""
^^^^^^^^^^^^^^^^^^^^^^^
parser print bracket "":
    block standard: bracket [< "[" "<" >] ... [< ">" "]" >]
                    [data, code, math, text]
                    with parsing selectors [- parser, + data, - prefix,
                                            - code, - math, - text]
                    with parsing options [- end at line separator]
                    with label reformatter
    block standard: bracket [< "{" "*" >] ... [< "*" "}" >] [data]
                    with parsing options [- end at line separator]
    block standard: bracket "(" ... ")" [data, code, math, text]
                    with parsing options [- end at line separator]
    block TOP LEVEL: bracket "(" ... ")" [parser]
                     with parsing options [- end at line separator]
    block standard: indentation mark ":" ... ";" [code]
                    with parsing options [- end at line break,
                                          + end at le indent,
                                          - end at lt indent,
                                          - end at paragraph break,
                                          + end at line separator,
                                          + end at outer closing]
    block standard: bracket "[" ... "]" [data, code, math, text]
                    with parsing options [- end at line separator]
    block TOP LEVEL: bracket "[" ... "]" [parser]
                     with parsing options [- end at line separator]
    block standard: bracket "`" ... "'" [data]
                    with parsing options [- end at line separator]
    block standard: bracket "`" ... "'" [code, math, text]
                    with parsing selectors [- code, - math, + text]
                    with parsing options [- end at line separator]
    block standard: bracket [< "{" "{" >] ... [< "}" "}" >] [data]
                    with parsing options [- end at line separator]
    block standard: bracket [< "{" "{" >] ... [< "}" "}" >]
                    [code, math, text]
                    with parsing selectors [- code, + math, - text]
                    with parsing options [- end at line separator]
    block standard: bracket "{" ... "|" ... "|" ... "}"
                    [data, code, math, text]
                    with parsing options [- end at line separator]
                    with attribute selectors [data, prefix]
                    with attributes ":" ... "=" ... ","
                    with attribute negator "no"
                    with attribute flags initiator "["
                    with attribute multivalue initiator [< "{" "*" >]
                    with prefix separators allowed
    block TOP LEVEL: indentation mark [< "TOP" "LEVEL" >] ... ";" []
    block standard: bracket "<+" ... "+>" [math]
    block standard: bracket "<-" ... "->" [text]
    block standard: bracket [< "[" "$" >] ... [< "$" "]" >]
                    [data, code, math, text]
                    with parsing selectors [- parser, + data, - prefix,
                                            - code, - math, - text]
                    with parsing options [- end at line separator]
                    with special reformatter
