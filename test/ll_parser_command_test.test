parser print selectors:
    [ - parser, + code, - math, - text ]
parser define selector my selector
ERROR: in line 13: extraneous stuff after:
parser define selector operator 1 ++ extra stuff
                                ^
parser print selectors:
    [ - parser, + code, - math, - text, - my selector, - operator 1 ]
parser print trace:
    [ - warnings, - parser input, - parser output, + parser commands,
      - subexpression elements, - subexpression details,
      - subexpression lines, - keys, - bracketed subexpressions ]
parser trace [+ parser input]
WORD: parser: line 19:
parser trace [- parser input]
^^^^^^
WORD: trace: line 19:
parser trace [- parser input]
       ^^^^^
SEPARATOR: [: line 19:
parser trace [- parser input]
             ^
MARK: -: line 19:
parser trace [- parser input]
              ^
WORD: parser: line 19:
parser trace [- parser input]
                ^^^^^^
WORD: input: line 19:
parser trace [- parser input]
                       ^^^^^
SEPARATOR: ]: line 19:
parser trace [- parser input]
                            ^
LINE_BREAK: line 19:
parser trace [- parser input]
                             ^
parser print trace:
    [ - warnings, + parser input, - parser output, + parser commands,
      - subexpression elements, - subexpression details,
      - subexpression lines, - keys, - bracketed subexpressions ]
WORD: parser: line 20:
parser print trace
^^^^^^
WORD: print: line 20:
parser print trace
       ^^^^^
WORD: trace: line 20:
parser print trace
             ^^^^^
LINE_BREAK: lines 20-21:
parser print trace
                  ^
<BLANK-LINE>
^
parser trace [- parser input]
parser print trace:
    [ - warnings, - parser input, - parser output, + parser commands,
      - subexpression elements, - subexpression details,
      - subexpression lines, - keys, - bracketed subexpressions ]
======= TEST: parser test [x <+ y +> z {u , v , w} m (n (p))]
parser trace [+ subexpression lines]
======= TEST:
------- line 24:
parser test [ x <+ y +> z {u,v,w} m (n (p)) ]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 24:
parser test [ x <+ y +> z {u,v,w} m (n (p)) ]
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 24:
parser test [ x <+ y +> z {u,v,w} m (n (p)) ]
                          ^^^^^^^
------- line 24:
parser test [ x <+ y +> z {u,v,w} m (n (p)) ]
                                    ^^^^^^^
------- line 24:
parser test [ x <+ y +> z {u,v,w} m (n (p)) ]
                                       ^^^
======= END TEST
parser trace [- subexpression lines]
parser trace [+ subexpression details]
======= TEST: {| parser test
                 {| x <+ y +> z
                    {| u , v , w; .position = {| |}; .terminator = };
                       .initiator = { |} m
                    {| n
                       {| p; .position = {| |}; .terminator = );
                          .initiator = ( |}; .position = {| |};
                       .terminator = ); .initiator = ( |};
                    .position = {| |}; .terminator = ];
                    .initiator = [ |}; .terminator = ␤;
                 .position = {| |} |}
parser trace [+ subexpression elements]
======= TEST: parser test [x <+ y +> z {u , v , w} m (n (p))]
    {| parser test
       {| x <+ y +> z
          {| u , v , w; .position = {| |}; .terminator = };
             .initiator = { |} m
          {| n
             {| p; .position = {| |}; .terminator = ); .initiator = ( |};
             .position = {| |}; .terminator = ); .initiator = ( |};
          .position = {| |}; .terminator = ]; .initiator = [ |};
       .terminator = ␤; .position = {| |} |}
parser trace [- subexpression details]
======= TEST: parser test [x <+ y +> z {u , v , w} m (n (p))]
parser trace [+ subexpression lines]
======= TEST: parser test [x <+ y +> z {u , v , w} m (n (p))]
------- line 33:
parser test [ x <+ y +> z {u,v,w} m (n (p)) ]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 33:
parser test [ x <+ y +> z {u,v,w} m (n (p)) ]
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 33:
parser test [ x <+ y +> z {u,v,w} m (n (p)) ]
                          ^^^^^^^
------- line 33:
parser test [ x <+ y +> z {u,v,w} m (n (p)) ]
                                    ^^^^^^^
------- line 33:
parser test [ x <+ y +> z {u,v,w} m (n (p)) ]
                                       ^^^
======= END TEST
