======= TEST: parser test [ x ( y ) z { u, v, w } m ( n ( p ) ) ]
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
                ^^^^^
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
                        ^^^^^^^
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
                                  ^^^^^^^
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
                                     ^^^
======= END TEST
======= TEST: parser test ( {}, x, y, {}, z, {}, {} )
------- line 12:
parser test (,x,y,,z,,)
^^^^^^^^^^^^^^^^^^^^^^^
------- line 12:
parser test (,x,y,,z,,)
            ^^^^^^^^^^^
------- line 12:
parser test (,x,y,,z,,)
             ^
------- line 12:
parser test (,x,y,,z,,)
                  ^
------- line 12:
parser test (,x,y,,z,,)
                     ^
------- line 12:
parser test (,x,y,,z,,)
                      ^
======= END TEST
======= TEST: parser test
                   {"": .operator = "=", .terminator = ")", .initiator =
                        "("| = x {"": .operator = "+="| += y z |} |}
------- line 13:
parser test ( x = y += z )
^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 13:
parser test ( x = y += z )
            ^^^^^^^^^^^^^^
------- line 13:
parser test ( x = y += z )
                  ^^^^^^
======= END TEST
======= TEST: parser test
                   {"": .operator = "=", .terminator = "}", .initiator =
                        "{"| = {| x 1 |}
                         {"": .operator = "+="| += {| y 2 |} z |} |}
------- line 14:
parser test { x1 = y2 += z }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 14:
parser test { x1 = y2 += z }
            ^^^^^^^^^^^^^^^^
------- line 14:
parser test { x1 = y2 += z }
              ^^
------- line 14:
parser test { x1 = y2 += z }
                   ^^^^^^^
------- line 14:
parser test { x1 = y2 += z }
                   ^^
======= END TEST
======= TEST: parser test
                   { {"": .operator = "="| = {| x 1 |} {| y 2 |} |},
                     {"": .operator = "+="| += {| z 2 |} {| z 5 |} |} }
------- line 15:
parser test { x1 = y2, z2 += z5 }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
            ^^^^^^^^^^^^^^^^^^^^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
              ^^^^^^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
              ^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
                   ^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
                       ^^^^^^^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
                       ^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
                             ^^
======= END TEST
======= TEST: parser test
                   {"": .operator = AND, .terminator = "}", .initiator =
                        "{"| AND
                         {"": .operator = "<"| < x
                               {"": .operator = "$"| $ 0 y |} |}
                         {"": .operator = "<"| <
                               {"": .operator = "$"| $ 0 |} z |} |}
------- line 16:
parser test { x < y < z }
^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 16:
parser test { x < y < z }
            ^^^^^^^^^^^^^
------- line 16:
parser test { x < y < z }
              ^^^^^
------- line 16:
parser test { x < y < z }
                  ^
------- line 16:
parser test { x < y < z }
                  ^^^^^
------- line 16:
parser test { x < y < z }
                  ^
======= END TEST
======= TEST: parser test
                   {"": .operator = "=", .terminator = "]", .initiator =
                        "["| = x
                         {"": .operator = "<", .terminator = ")",
                              .initiator = "("| < y z |} |}
------- line 17:
parser test [ x = ( y < z ) ]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 17:
parser test [ x = ( y < z ) ]
            ^^^^^^^^^^^^^^^^^
------- line 17:
parser test [ x = ( y < z ) ]
                  ^^^^^^^^^
======= END TEST
======= TEST: parser test
                   {"": .operator = "=", .terminator = "]", .initiator =
                        "["| = x
                         {"": .operator = AND| AND
                               {"": .operator = "<"| < w
                                     {"": .operator = "$"| $ 1 y |} |}
                               {"": .operator = "<"| <
                                     {"": .operator = "$"| $ 1 |} z |} |} |}
------- line 18:
parser test [ x = w < y < z ]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 18:
parser test [ x = w < y < z ]
            ^^^^^^^^^^^^^^^^^
------- line 18:
parser test [ x = w < y < z ]
                  ^^^^^^^^^
------- line 18:
parser test [ x = w < y < z ]
                  ^^^^^
------- line 18:
parser test [ x = w < y < z ]
                      ^
------- line 18:
parser test [ x = w < y < z ]
                      ^^^^^
------- line 18:
parser test [ x = w < y < z ]
                      ^
======= END TEST
