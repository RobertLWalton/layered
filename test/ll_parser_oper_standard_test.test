======= TEST: parser test [x (y) z {u, v, w} m (n (p))]
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
                ^^^^^
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
                        ^^^^^^^
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
                                  ^^^^^^^
------- line 11:
parser test [ x ( y ) z {u,v,w} m (n (p)) ]
                                     ^^^
======= END TEST
======= TEST: parser test ([.  .], x, y, [.  .], z, [.  .], [.  .])
------- line 12:
parser test (,x,y,,z,,)
^^^^^^^^^^^^^^^^^^^^^^^
------- line 12:
parser test (,x,y,,z,,)
            ^^^^^^^^^^^
------- line 12:
parser test (,x,y,,z,,)
             ^
------- line 12:
parser test (,x,y,,z,,)
                  ^
------- line 12:
parser test (,x,y,,z,,)
                     ^
------- line 12:
parser test (,x,y,,z,,)
                      ^
======= END TEST
======= TEST: parser test (= x [. += y z .])
------- line 13:
parser test ( x = y += z )
^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 13:
parser test ( x = y += z )
            ^^^^^^^^^^^^^^
------- line 13:
parser test ( x = y += z )
                  ^^^^^^
======= END TEST
======= TEST: parser test {= [. x 1 .] [. += [. y 2 .] z .]}
------- line 14:
parser test { x1 = y2 += z }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 14:
parser test { x1 = y2 += z }
            ^^^^^^^^^^^^^^^^
------- line 14:
parser test { x1 = y2 += z }
              ^^
------- line 14:
parser test { x1 = y2 += z }
                   ^^^^^^^
------- line 14:
parser test { x1 = y2 += z }
                   ^^
======= END TEST
======= TEST: parser test
              {[. = [. x 1 .] [. y 2 .] .],
               [. += [. z 2 .] [. z 5 .] .]}
------- line 15:
parser test { x1 = y2, z2 += z5 }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
            ^^^^^^^^^^^^^^^^^^^^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
              ^^^^^^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
              ^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
                   ^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
                       ^^^^^^^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
                       ^^
------- line 15:
parser test { x1 = y2, z2 += z5 }
                             ^^
======= END TEST
======= TEST: parser test
              {AND [. < x [. $ 0 y .] .] [. < [. $ 0 .] z .]}
------- line 16:
parser test { x < y < z }
^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 16:
parser test { x < y < z }
            ^^^^^^^^^^^^^
------- line 16:
parser test { x < y < z }
              ^^^^^
------- line 16:
parser test { x < y < z }
                  ^
------- line 16:
parser test { x < y < z }
                  ^^^^^
------- line 16:
parser test { x < y < z }
                  ^
======= END TEST
======= TEST: parser test [= x (< y z)]
------- line 17:
parser test [ x = ( y < z ) ]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 17:
parser test [ x = ( y < z ) ]
            ^^^^^^^^^^^^^^^^^
------- line 17:
parser test [ x = ( y < z ) ]
                  ^^^^^^^^^
======= END TEST
======= TEST: parser test
              [= x [. AND [. < w [. $ 1 y .] .] [. < [. $ 1 .] z .] .]]
------- line 18:
parser test [ x = w < y < z ]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
------- line 18:
parser test [ x = w < y < z ]
            ^^^^^^^^^^^^^^^^^
------- line 18:
parser test [ x = w < y < z ]
                  ^^^^^^^^^
------- line 18:
parser test [ x = w < y < z ]
                  ^^^^^
------- line 18:
parser test [ x = w < y < z ]
                      ^
------- line 18:
parser test [ x = w < y < z ]
                      ^^^^^
------- line 18:
parser test [ x = w < y < z ]
                      ^
======= END TEST
