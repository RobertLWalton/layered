// Layered Languages Parser Primary Command Test Data
//
// File:	ll_parser_primary_command_test.in
// Author:	Bob Walton (walton@acm.org)
// Date:	Fri Dec  1 05:47:57 EST 2023
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

*PARSER*:
    print selector ""
    print pass
    trace [+ parser commands, + warnings ]

*PARSER*:
    begin block BLOCK1
    define primary variable ``X Y 1'' [code]
           with module M with location 100
    print primary variable ``''
    test primary ``X Y 1'' [code]
    test primary ``X Y 1 FOO'' [code]
    test primary ``X Y'' [code]
    define primary variable ``X Y'' [code]
           with module M with location 200
    test primary ``X Y 1 FOO'' [code]
    test primary ``X Y'' [code]
    test primary ``X'' [code]
    print primary variable ``''
    end block BLOCK1
    print primary variable ``''

*PARSER*:
    begin block BLOCK1
    define primary function ``(X) "+" (Y)'' [code]
    print primary function ``''
    test primary ``(A)+(B)'' [code]
    test primary ``{|A|}+(B)'' [code]
    test primary ``{|A 1|}+(B)'' [code]
    test primary ``(A)+(B)+(C)'' [code]
    test primary ``(A)+'' [code]
    end block BLOCK1

*PARSER*:
    begin block BLOCK1
    define primary function ``F (X) ({|Y|}?={|Z|})'' [code]
    print primary function ``''
    test primary ``F (A) (B)'' [code]
    test primary ``F (A)'' [code]
    test primary ``F'' [code]
    end block BLOCK1

*PARSER*:
    begin block BLOCK1
    define primary function ``F (X) G ({|Y|}?={|Q|}) H (Z)'' [code]
    print primary function ``''
    // test primary ``F (A) G (B) H ( C )'' [code]
    // test primary ``F (A) H (B) G ( C )'' [code]
    // test primary ``F (A) H (B)'' [code]
    // test primary ``F (A) G (B)'' [code]
    end block BLOCK1
