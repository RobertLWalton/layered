// Layered Languages Parser Primary Command Test Data
//
// File:	ll_parser_primary_command_test.in
// Author:	Bob Walton (walton@acm.org)
// Date:	Fri Aug 23 04:20:41 AM EDT 2024
//
// The authors have placed this data in the public
// domain; they make no warranty and accept no liability
// for this data.

*PARSER*:
    print selector ""
    print pass
    trace [+ parser commands, + warnings ]

*PARSER*:
    begin block BLOCK1
    define primary variable ``X Y 1'' [code]
           with module M with location 100
    print primary variable ``''
    test primary ``X Y 1'' [code]
    test primary ``X Y 1 FOO'' [code]
    test primary ``X Y'' [code]
    define primary variable ``X Y'' [code]
           with module M with location 200
    test primary ``X Y 1 FOO'' [code]
    test primary ``X Y'' [code]
    test primary ``X'' [code]
    print primary variable ``''
    end block BLOCK1
    print primary variable ``''

*PARSER*:
    begin block BLOCK1
    define primary function ``(A1) "+" (A2)'' [code]
    print primary function ``''
    test primary ``(A)+(B)'' [code]
    test primary ``{|A|}+(B)'' [code]
    test primary ``{|A 1|}+(B)'' [code]
    test primary ``(A)+(B)+(C)'' [code]
    test primary ``(A)+'' [code]
    test primary ``(A)+(B)-(C)'' [code]
    test primary ``(A)-(B)+(C)'' [code]
    test primary ``(A)*(B)*(C)'' [code]
    test primary ``(A)/(B)'' [code]
    test primary ``-(A)'' [code]
    end block BLOCK1

*PARSER*:
    begin block BLOCK1
    define primary function ``F [X]'' [code]
    print primary function ``''
    test primary ``F [A]'' [code]
    test primary ``F'' [code]
    end block BLOCK1

*PARSER*:
    begin block BLOCK1
    define primary function ``F (X) ({|Y|}?={|Z|})'' [code]
    print primary function ``''
    test primary ``F (A) (B)'' [code]
    test primary ``F (A)'' [code]
    test primary ``F'' [code]
    end block BLOCK1

*PARSER*:
    begin block BLOCK1
    define primary function ``F (X) G ({|Y|}?={|Q|}) H (Z)'' [code]
    print primary function ``''
    test primary ``F (A) G (B) H ( C )'' [code]
    test primary ``F (A) H (B) G ( C )'' [code]
    test primary ``F (A) H (B)'' [code]
    test primary ``F (A) G (B)'' [code]
    test primary ``F (A) H (B) G ( C ) H (D )'' [code]
    test primary ``F (A)
                   H {"": .separator = ",",
	                  .initiator = "(",
	                  .terminator = ")"|
			  {|B1|} {|B2|}|}
		   '' [code]
    end block BLOCK1

*PARSER*:
    begin block BLOCK1
    define primary function
       ``{"": .separator = ",",
	      .initiator = "(",
	      .terminator = ")"|{|X1|} {|X2|}|} F
	 {"": .separator = ",",
	      .initiator = "(",
	      .terminator = ")"|
	       {|Z1|} {|{|Z2|} ?= {|D2|}|}|}''
	 [code]
    print primary function ``''
    test primary
        ``{"": .separator = ",",
	       .initiator = "(",
	       .terminator = ")"|{|A1|} {|A2|}|} F
	  {"": .separator = ",",
	       .initiator = "(",
	       .terminator = ")"|{|B1|} {|B2|}|}''
	  [code]
    test primary
        ``{"": .separator = ",",
	       .initiator = "(",
	       .terminator = ")"|{|A1|} {|A2|}|} F
	  (B)''
	  [code]
    test primary
        ``(A) F
	  {"": .separator = ",",
	       .initiator = "(",
	       .terminator = ")"|{|B1|} {|B2|}|}''
	  [code]
    test primary
        ``{"": .separator = ",",
	       .initiator = "(",
	       .terminator = ")"|
	       {|A1|} {|A2|} {|A3|}|} F
	  {"": .separator = ",",
	       .initiator = "(",
	       .terminator = ")"|
	       {|B1|} {|B2|}|}''
	  [code]
    test primary
        ``{"": .separator = ",",
	       .initiator = "(",
	       .terminator = ")"|{|A1|} {|A2|}|} F
	  {"": .separator = ",",
	       .initiator = "(",
	       .terminator = ")"|
	       {|B1|} {|B2|} {|B3|}|}''
	  [code]
    end block BLOCK1

*PARSER*:
    begin block BLOCK1
    define primary function
       ``{"": .separator = ",",
	      .initiator = "(",
	      .terminator = ")"|{|X1|} {|X2|}|} F
	 {"": .separator = ",",
	      .initiator = "(",
	      .terminator = ")"|
	       {|Z1|} {|{|Z2|} ?= {|D2|}|} {|Z3|}|}''
	 [code]
    end block BLOCK1

*PARSER*:
    begin block BLOCK1
    define primary function ``(A) F (B) G (C)'' [code]
    define primary function ``(A) F (B)'' [code]
    test primary ``(X) F (Y)'' [code]
    test primary ``(X) F (Y) G(Z)'' [code]
    end block BLOCK1

*PARSER*:
    begin block BLOCK1
    define primary function
        ``F1 (A) G ({|B|} ?= {|TRUE|})'' [code]
    test primary ``F1 (Y)'' [code]
    test primary ``F1 (Y) NOT G'' [code]
    test primary ``F1 (Y) G'' [code]
    define primary function
        ``F2 (A) G ({|B|} ?= {|FALSE|})'' [code]
    test primary ``F2 (Y)'' [code]
    test primary ``F2 (Y) NOT G'' [code]
    test primary ``F2 (Y) G'' [code]
    end block BLOCK1
