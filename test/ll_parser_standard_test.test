BRACKETED EXPRESSION:
    ID 10 is {|{|x|} + {|y|}|}
BRACKETED EXPRESSION:
    ID 11 is {|x + y|}
ERROR: in line ##: not a legal value element `*':
        z = x * y
              ^
ERROR: in line ##: after `=' attribute value (label or single bracketed
       subexpression) was expected but none found; line ignored:
        z = x * y
          ^
ERROR: in line ##: not a legal value element `-':
        w = u - v
              ^
ERROR: in line ##: after `=' attribute value (label or single bracketed
       subexpression) was expected but none found; line ignored:
        w = u - v
          ^
BRACKETED EXPRESSION:
    ID 20 is {"": b = [< c "/" d >]|{|x|} + {|y|}|}
BRACKETED EXPRESSION:
    ID 21 is {|{|x|} * {|y|}|}
BRACKETED EXPRESSION:
    ID 22 is {|{|u|} - {|v|}|}
BRACKETED EXPRESSION:
    ID 23 is
        {"": z = {|{|x|} * {|y|}|}, w = {|{|u|} - {|v|}|}|{|x|} +
             {|y|}|}
BRACKETED EXPRESSION:
    ID 30 is
        {|this is an indented paragraph
          {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator =
               "::"|{p|{s|with a line and a second line|s}|p}|}|}
BRACKETED EXPRESSION:
    ID 35 is foo
BRACKETED EXPRESSION:
    ID 36 is "fum"
BRACKETED EXPRESSION:
    ID 40 is
        {|This is a code line ending in
          {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator = ":"|
               {"": .terminator = "<LF>", .initiator =
                    [$ LOGICAL_LINE $]|An indented paragragraph ";" line
                    one "."|}
               {"": .terminator = "<LF>", .initiator =
                    [$ LOGICAL_LINE $]|Line two "."|}|}|}
ERROR: in line ##: not a legal label initial element `98.21':
           d = "ppp", e = "ppp" "qqq", 98.21 = hi, "," = ":",
                                       ^^^^^
WARNING: in line ##: separator should be quoted:
           f = ;, . = 99, g = [< m n >] p, h = [< [< m n >] p >]
                  ^
ERROR: in line ##: not a legal value element `m n':
           f = ;, . = 99, g = [< m n >] p, h = [< [< m n >] p >]
                              ^^^^^^^^^
ERROR: in line ##: bad attribute label; attribute ignored:
           d = "ppp", e = "ppp" "qqq", 98.21 = hi, "," = ":",
                                       ^^^^^
ERROR: in line ##: bad attribute value; attribute ignored:
           f = ;, . = 99, g = [< m n >] p, h = [< [< m n >] p >]
                              ^^^^^^^^^^^
BRACKETED EXPRESSION:
    ID 50 is
        {x: h = [< [< m n >] p >], "," = ":", d = "ppp", e =
            [< ppp qqq >], a = "quoted string", "." = 99, f = ";", b =
            53.91, c = [< yyy 53.91 >]|"quoted string" 53.91 99 ";"
            foo|x}
BRACKETED EXPRESSION:
    ID 60 is {"": a = @@ = b, d = @@ = c}
@@ :=::
          .position[H] = PACKED_VEC
          b = @@ = a
          c = @@ = d
@@ :=::
          a = @@ = b
          .position[H] = PACKED_VEC
          d = @@ = c
BRACKETED EXPRESSION:
    ID 61 is {"": a = @@ = b}
BRACKETED EXPRESSION:
    ID 70 is {"": e 22.99 = 5, a = [< b 55.44 >], c = @@ = d 77.33}
ERROR: in line ##: not a legal label initial element `2':
    2 = X
    ^
ERROR: in line ##: line does not begin with a (possibly negated)
       attribute label; line ignored:
    2 = X
    ^^^^^
ERROR: in line ##: not a legal label initial element `6':
    6 = Z
    ^
ERROR: in line ##: line does not begin with a (possibly negated)
       attribute label; line ignored:
    6 = Z
    ^^^^^
ERROR: in line ##: not a legal label initial element `7.1':
    7.1 = Q
    ^^^
ERROR: in line ##: line does not begin with a (possibly negated)
       attribute label; line ignored:
    7.1 = Q
    ^^^^^^^
ERROR: in line ##: not a legal label initial element `1':
    K = @@@ = 1 L
              ^
ERROR: in line ##: reverse attribute label after second `=' was expected
       but not found; line ignored:
    K = @@@ = 1 L
            ^
@@ :=::
          .position[H] = PACKED_VEC
          d 77.33 = @@ = c
@@ :=::
          .position[H] = PACKED_VEC
          J = @@ = H
          e 22.99 = 5
          a = [< b 55.44 >]
          c = @@ = d 77.33
@@ := A B C D E::
          F = [< 1 2 3 >]
          G = [< M N P >]
          H = @@ = J
          8.4.5 = P
          4 = Y
          .position[H] = PACKED_VEC
BRACKETED EXPRESSION:
    ID 80 is
        {"": F = [< 1 2 3 >], G = [< M N P >], H = @@ = J, 8.4.5 = P,
             4 = Y|A B C D E|}
BRACKETED EXPRESSION:
    ID X is {"": name = X, next = @@ = previous, previous = @@ = next}
@@ :=::
          previous = @@ = next
          .position[H] = PACKED_VEC
          name = Y
          next = @@ = previous
@@ :=::
          name = X
          next = @@ = previous
          previous = @@ = next
          .position[H] = PACKED_VEC
BRACKETED EXPRESSION:
    ID Y is {"": previous = @@ = next, name = Y, next = @@ = previous}
ERROR: in line ###: ID references an object that already has
       single-attribute-values or attribute-flags, other than for
       .position; definition ignored:
@<X> := hi there @<Z>
^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    ID X is {|hi there ({|m|} + {|n|})|}
BRACKETED EXPRESSION:
    ID Y is ({|m|} + {|n|})
BRACKETED EXPRESSION:
    ID Z is PREALLOCATED(1*0)
BRACKETED EXPRESSION:
    {quote|{s|This is a line with an indented paragraph
              {"": .terminator = [$ INDENTED_PARAGRAPH $], .initiator =
                   ":"|
                   {p|{s: .terminator = "."|First line of indented
                          paragraph|s}
                      {s: .terminator = "."|Second line of indented
                          paragraph|s}|p}|}|s}|quote}
@@ := @@::
          .type = quote
          .position[H] = PACKED_VEC
@@ := This is a line with an indented paragraph @@@::
          .position[H] = PACKED_VEC
          .type = s
@@@ := @@@::
           .terminator = [$ INDENTED_PARAGRAPH $]
           .position[H] = PACKED_VEC
           .initiator = ":"
@@@ := @@@ @@@::
           .position[H] = PACKED_VEC
           .type = p
@@@ := First line of indented paragraph::
           .terminator = "."
           .position[H] = PACKED_VEC
           .type = s
@@@ := Second line of indented paragraph::
           .terminator = "."
           .position[H] = PACKED_VEC
           .type = s
    lines ###-###:
{quote}
^^^^^^^
This is a line with an indented paragraph: // A comment
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    First line of indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Second line of indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
BRACKETED EXPRESSION:
    {|x|} + {|y|}
@@@ := @@@ "+" @@@::
           .terminator = "<LF>"
           .initiator = [$ LOGICAL_LINE $]
           .position[H] = PACKED_VEC
@@@ := x::
           .position[H] = PACKED_VEC
@@@ := y::
           .position[H] = PACKED_VEC
    line ###:
x + y
^^^^^
