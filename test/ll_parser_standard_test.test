=== BRACKETED EXPRESSION:
    ID 10 is {|{|x|} + {|y|}|}
=== BRACKETED EXPRESSION:
    ID 11 is {|x + y|}
ERROR: in line ##: not a legal value element `*':
        z = x * y
              ^
ERROR: in line ##: after `=' attribute value (label or single bracketed
       subexpression) was expected but none found; line ignored:
        z = x * y
          ^
ERROR: in line ##: not a legal value element `-':
        w = u - v
              ^
ERROR: in line ##: after `=' attribute value (label or single bracketed
       subexpression) was expected but none found; line ignored:
        w = u - v
          ^
=== BRACKETED EXPRESSION:
    ID 20 is {"": b = [< c "/" d >]|{|x|} + {|y|}|}
=== BRACKETED EXPRESSION:
    ID 21 is {|{|x|} * {|y|}|}
=== BRACKETED EXPRESSION:
    ID 22 is {|{|u|} - {|v|}|}
=== BRACKETED EXPRESSION:
    ID 23 is
        {"": z = {|{|x|} * {|y|}|}, w = {|{|u|} - {|v|}|}|{|x|} +
             {|y|}|}
=== BRACKETED EXPRESSION:
    ID 30 is
        {|this is an indented paragraph
          {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = "::"|
               {p|{s|with a line and a second line|s}|p}|}|}
=== BRACKETED EXPRESSION:
    ID 35 is {|foo|}
=== BRACKETED EXPRESSION:
    ID 36 is "fum"
=== BRACKETED EXPRESSION:
    ID 40 is
        {|{|This is a code line ending in|}
          {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
               {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|An
                    indented paragragraph ";" line one "."|}
               {"": .terminator = "<LF>", .initiator = *LOGICAL_LINE*|
                    Line two "."|}|}|}
ERROR: in line ##: not a legal label initial element `98.21':
           d = "ppp", e = "ppp" "qqq", 98.21 = hi, "," = ":",
                                       ^^^^^
WARNING: in line ##: separator should be quoted:
           f = ;, . = 99, g = [< m n >] p, h = [< [< m n >] p >]
                  ^
ERROR: in line ##: not a legal value element `m n':
           f = ;, . = 99, g = [< m n >] p, h = [< [< m n >] p >]
                              ^^^^^^^^^
ERROR: in line ##: bad attribute label; attribute ignored:
           d = "ppp", e = "ppp" "qqq", 98.21 = hi, "," = ":",
                                       ^^^^^
ERROR: in line ##: bad attribute value; attribute ignored:
           f = ;, . = 99, g = [< m n >] p, h = [< [< m n >] p >]
                              ^^^^^^^^^^^
=== BRACKETED EXPRESSION:
    ID 50 is
        {x: h = [< [< m n >] p >], "," = ":", d = ppp, e =
            [< ppp qqq >], a = "quoted string", "." = 99, f = ";", b =
            53.91, c = [< yyy 53.91 >]|"quoted string" 53.91 99 ";"
            foo|x}
=== BRACKETED EXPRESSION:
    ID 60 is {"": a = @@ = b, d = @@ = c}
!@@ :=:
           .position[H] = PACKED_VEC
           b = @@ = a
           c = @@ = d
!@@ :=:
           a = @@ = b
           .position[H] = PACKED_VEC
           d = @@ = c
=== BRACKETED EXPRESSION:
    ID 61 is {"": a = @@ = b}
=== BRACKETED EXPRESSION:
    ID 70 is {"": e 22.99 = 5, a = [< b 55.44 >], c = @@ = d 77.33}
ERROR: in line ##: not a legal label initial element `2':
    2 = X
    ^
ERROR: in line ##: line does not begin with a (possibly negated)
       attribute label; line ignored:
    2 = X
    ^^^^^
ERROR: in line ##: not a legal label initial element `6':
    6 = Z
    ^
ERROR: in line ##: line does not begin with a (possibly negated)
       attribute label; line ignored:
    6 = Z
    ^^^^^
ERROR: in line ##: not a legal label initial element `7.1':
    7.1 = Q
    ^^^
ERROR: in line ##: line does not begin with a (possibly negated)
       attribute label; line ignored:
    7.1 = Q
    ^^^^^^^
ERROR: in line ##: not a legal label initial element `1':
    K = @@@ = 1 L
              ^
ERROR: in line ##: reverse attribute label after second `=' was expected
       but not found; line ignored:
    K = @@@ = 1 L
            ^
!@@ :=:
           .position[H] = PACKED_VEC
           d 77.33 = @@ = c
!@@ :=:
           .position[H] = PACKED_VEC
           J = @@ = H
           e 22.99 = 5
           a = [< b 55.44 >]
           c = @@ = d 77.33
!@@ := A B C D E:
           F = [< 1 2 3 >]
           G = [< M N P >]
           H = @@ = J
           8.4.5 = P
           "4" = Y
           .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION:
    ID 80 is
        {"": F = [< 1 2 3 >], G = [< M N P >], H = @@ = J, 8.4.5 = P,
             "4" = Y|A B C D E|}
=== BRACKETED EXPRESSION:
    ID X is {"": name = X, next = @@ = previous, previous = @@ = next}
!@@ :=:
           previous = @@ = next
           .position[H] = PACKED_VEC
           name = Y
           next = @@ = previous
!@@ :=:
           name = X
           next = @@ = previous
           previous = @@ = next
           .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION:
    ID Y is {"": previous = @@ = next, name = Y, next = @@ = previous}
ERROR: in line ###: ID references an object that already has
       single-attribute-values or attribute-flags, other than for
       .position; definition ignored:
@<X> := hi there @<Z>
^^^^^^^^^^^^^^^^^^^^^
=== BRACKETED EXPRESSION:
    ID X is {|hi there ({|m|} + {|n|})|}
=== BRACKETED EXPRESSION:
    ID Y is ({|m|} + {|n|})
=== BRACKETED EXPRESSION:
    ID Z is PREALLOCATED(1*0)
=== BRACKETED EXPRESSION: lines ###-###:
{quote}
^^^^^^^
This is a line with an indented paragraph: // A comment
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    First line of indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Second line of indented paragraph.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    {quote|{s|This is a line with an indented paragraph
              {"": .terminator = *INDENTED_PARAGRAPH*, .initiator = ":"|
                   {p|{s: .terminator = "."|First line of indented
                          paragraph|s}
                      {s: .terminator = "."|Second line of indented
                          paragraph|s}|p}|}|s}|quote}
!@@ := @@:
           .type = quote
           .position[H] = PACKED_VEC
!@@ := This is a line with an indented paragraph @@@:
           .position[H] = PACKED_VEC
           .type = s
!@@@ := @@@:
            .terminator = *INDENTED_PARAGRAPH*
            .position[H] = PACKED_VEC
            .initiator = ":"
!@@@ := @@@ @@@:
            .position[H] = PACKED_VEC
            .type = p
!@@@ := First line of indented paragraph:
            .terminator = "."
            .position[H] = PACKED_VEC
            .type = s
!@@@ := Second line of indented paragraph:
            .terminator = "."
            .position[H] = PACKED_VEC
            .type = s
=== BRACKETED EXPRESSION: line ###:
x + y
^^^^^
    {|x|} + {|y|}
!@@@ := @@@ "+" @@@:
            .terminator = "<LF>"
            .initiator = *LOGICAL_LINE*
            .position[H] = PACKED_VEC
!@@@ := x:
            .position[H] = PACKED_VEC
!@@@ := y:
            .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION: line ###:
COOKED ID 90 is @@@
^^^^^^^^^^^^^^^^^^^
    COOKED ID 90 is (A B C)
!@@@ := COOKED ID 90 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := A B C:
            .terminator = ")"
            .initiator = "("
            .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION: line ###:
COOKED ID 91 is @@@
^^^^^^^^^^^^^^^^^^^
    COOKED ID 91 is ({|A|}, {|B|}, {|C|})
!@@@ := COOKED ID 91 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := @@@ @@@ @@@:
            .terminator = ")"
            .initiator = "("
            .separator = ","
            .position[H] = PACKED_VEC
!@@@ := A:
            .position[H] = PACKED_VEC
!@@@ := B:
            .position[H] = PACKED_VEC
!@@@ := C:
            .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION: line ###:
COOKED ID 92 is @@@
^^^^^^^^^^^^^^^^^^^
    COOKED ID 92 is [{|A|}, {|B|}, {|C|}]
!@@@ := COOKED ID 92 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := @@@ @@@ @@@:
            .terminator = "]"
            .initiator = "["
            .separator = ","
            .position[H] = PACKED_VEC
!@@@ := A:
            .position[H] = PACKED_VEC
!@@@ := B:
            .position[H] = PACKED_VEC
!@@@ := C:
            .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION: line ###:
RAW ID 94 is @@@
^^^^^^^^^^^^^^^^
    RAW ID 94 is PREALLOCATED(1*94)
!@@@ := RAW ID 94 is PREALLOCATED(1*94):
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
=== BRACKETED EXPRESSION: line ###:
RAW ID 94 is @@@
^^^^^^^^^^^^^^^^
    RAW ID 94 is [A "," B "," C]
!@@@ := RAW ID 94 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := A "," B "," C:
            .terminator = "]"
            .initiator = "["
            .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION: line ###:
ID 100 is @@@@
^^^^^^^^^^^^^^
    ID 100 is {x: u = [< foo "+" fee >]|1 2 3|x}
!@@@ := ID 100 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := 1 2 3:
            .type = x
            u = [< foo "+" fee >]
            .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION: line ###:
ID 101 is @@@@
^^^^^^^^^^^^^^
    ID 101 is {x: u = {|foo "+" fee|}|1 2 3|x}
!@@@ := ID 101 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := 1 2 3:
            .type = x
            u = @@@
            .position[H] = PACKED_VEC
!@@@ := foo @@@ fee:
            .position[H] = PACKED_VEC
!@@@ := "+":
            .type = "<Q>"
WARNING: in line ###: mark should be quoted:
@@@@ := {x: u = foo + fee|1 2 3|}
                    ^
=== BRACKETED EXPRESSION: line ###:
ID 102 is @@@@
^^^^^^^^^^^^^^
    ID 102 is {x: u = [< foo "+" fee >]|1 2 3|x}
!@@@ := ID 102 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := 1 2 3:
            .type = x
            u = [< foo "+" fee >]
            .position[H] = PACKED_VEC
ERROR: in line ###: not a legal value element `+':
    y = foo + fee
            ^
ERROR: in line ###: after `=' attribute value (label or single bracketed
       subexpression) was expected but none found; line ignored:
    y = foo + fee
      ^
=== BRACKETED EXPRESSION: line ###:
ID 110 is @@@@
^^^^^^^^^^^^^^
    ID 110 is {"": x = [< foo "+" fee >], z = {|foo "+" fee|}|1 2 3|}
!@@@ := ID 110 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := 1 2 3:
            x = [< foo "+" fee >]
            z = @@@
            .position[H] = PACKED_VEC
!@@@ := foo @@@ fee:
            .position[H] = PACKED_VEC
!@@@ := "+":
            .type = "<Q>"
ERROR: in line ###: not a legal label initial element `8':
    8 = hi
    ^
ERROR: in line ###: line does not begin with a (possibly negated)
       attribute label; line ignored:
    8 = hi
    ^^^^^^
ERROR: in line ###: not a legal label initial element `9':
    9 b = ho
    ^
ERROR: in line ###: line does not begin with a (possibly negated)
       attribute label; line ignored:
    9 b = ho
    ^^^^^^^^
ERROR: in line ###: not a legal label initial element `5.4':
    5.4 c = he
    ^^^
ERROR: in line ###: line does not begin with a (possibly negated)
       attribute label; line ignored:
    5.4 c = he
    ^^^^^^^^^^
ERROR: in line ###: not a legal value element `++':
    q = M ++
          ^^
ERROR: in line ###: after `=' attribute value (label or single bracketed
       subexpression) was expected but none found; line ignored:
    q = M ++
      ^
ERROR: in line ###: empty label before:
    {|P Q|} = pq
    ^^^^^^^
ERROR: in line ###: line does not begin with a (possibly negated)
       attribute label; line ignored:
    {|P Q|} = pq
    ^^^^^^^^^^^^
ERROR: in line ###: not a legal label initial element `+':
    + = 9
    ^
ERROR: in line ###: line does not begin with a (possibly negated)
       attribute label; line ignored:
    + = 9
    ^^^^^
=== BRACKETED EXPRESSION: line ###:
ID 120 is @@@@
^^^^^^^^^^^^^^
    ID 120 is
        {"": y = nan, z = [< Q nan >], x nan = hmm, 6e = ha, 5d = ha,
             j = -5.4, k = "-5.4", G = {|L M N|}, s = {* x, x *}, t =
             ",", u = ",", w = "++"|A "B" C D E "+99" "+ +" "nan" nan|}
!@@@ := ID 120 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := A @@@ C D E @@@ @@@ @@@ nan:
            y = nan
            z = [< Q nan >]
            x nan = hmm
            6e = ha
            5d = ha
            .position[H] = PACKED_VEC
            j = -5.4
            k = "-5.4"
            G = @@@
            s = {* x, x *}
            t = ","
            u = ","
            w = "++"
!@@@ := B:
            .type = "<Q>"
!@@@ := "+99":
            .type = "<Q>"
!@@@ := "+ +":
            .type = "<Q>"
!@@@ := "nan":
            .type = "<Q>"
!@@@ := L M N:
            .position[H] = PACKED_VEC
WARNING: in line ###: mark should be quoted:
         t = +, u = "+", q = M ++,
                               ^^
ERROR: in line ###: not a legal label initial element `{|P Q|}':
         {|P Q|} = pq||, G = {|L M N|}}
         ^^^^^^^
ERROR: in line ###: bad attribute label; attribute ignored:
         {|P Q|} = pq||, G = {|L M N|}}
         ^^^^^^^
=== BRACKETED EXPRESSION: line ###:
ID 121 is @@@@
^^^^^^^^^^^^^^
    ID 121 is
        {T: p = {* "/", "hi there", "+" *}, t = "+", x = [< z z >], q =
            [< M "++" >], u = "+", y = z, z = z, G = {|L M N|}, s =
            {* x, x *}}
!@@@ := ID 121 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ :=:
            p = {* "/", "hi there", "+" *}
            t = "+"
            x = [< z z >]
            .type = T
            q = [< M "++" >]
            u = "+"
            y = z
            z = z
            G = @@@
            s = {* x, x *}
            .position[H] = PACKED_VEC
!@@@ := L M N:
            .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION: line ###:
ID 130 is @@@@
^^^^^^^^^^^^^^
    ID 130 is {|{|X|} + {|{|5|} * {|Y|}|}|}
!@@@ := ID 130 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := @@@ "+" @@@:
            .position[H] = PACKED_VEC
!@@@ := X:
            .position[H] = PACKED_VEC
!@@@ := @@@ "*" @@@:
            .position[H] = PACKED_VEC
!@@@ := 5:
            .position[H] = PACKED_VEC
!@@@ := Y:
            .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION: line ###:
ID 131 is @@@@
^^^^^^^^^^^^^^
    ID 131 is {p|X + 5 * Y|p}
!@@@ := ID 131 is @@@:
            .terminator = "<LF>"
            .position[H] = PACKED_VEC
            .initiator = *LOGICAL_LINE*
!@@@ := X "+" 5 "*" Y:
            .type = p
            .position[H] = PACKED_VEC
=== BRACKETED EXPRESSION:
    ID 140 is ``{s: .terminator = "."|This is a sentence|s}''
=== BRACKETED EXPRESSION:
    ID 141 is {a: b = ``{s: .terminator = "."|This is a sentence|s}''}
=== BRACKETED EXPRESSION:
    ID 142 is {a|{s} This is a sentence "."|a}
=== BRACKETED EXPRESSION:
    ID 143 is {a|``{s: .terminator = "."|This is a sentence|s}''|a}
=== BRACKETED EXPRESSION:
    ID 144 is {a: b = ``{s: .terminator = "."|This is a sentence|s}''}
ERROR: in line ###: missing `|'; inserted before:
@@@@ := {row| "|" error | b "||" c "|"|}
                                       ^
=== BRACKETED EXPRESSION:
    ID 150 is {row|"|" a "|" b "||" c "|"|row}
=== BRACKETED EXPRESSION:
    ID 151 is {row: b "||" c "|"|"|" error|row}
